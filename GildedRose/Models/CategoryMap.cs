// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace GildedRose.Models
{

    // Category
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public class CategoryMap : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Category>
    {
        public CategoryMap()
            : this("dbo")
        {
        }

        public CategoryMap(string schema)
        {
            ToTable("Category", schema);
            HasKey(x => x.CategoryId);

            Property(x => x.CategoryId).HasColumnName(@"CategoryId").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AgingSchemeId).HasColumnName(@"AgingSchemeId").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.CategoryName).HasColumnName(@"CategoryName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.AgingScheme).WithMany(b => b.Categories).HasForeignKey(c => c.AgingSchemeId).WillCascadeOnDelete(false); // FK_Category_AgingScheme
        }
    }

}
// </auto-generated>
