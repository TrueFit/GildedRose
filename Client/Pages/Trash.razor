@page "/trash"
@using GildedRose_Blazor.Shared
@inject HttpClient Http

<h1>Inventory Trash Manager</h1>

<button class="btn btn-primary" @onclick="DeleteItemsForTrash">Delete All Trash Items</button>

@if (items == null)
{
    <p><em>Loading...</em></p>
}
else if(!items.Any())
{
    <p><em>No Items To be trashed.</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Category</th>
                <th>Quality</th>
                <th>Sell In</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in items)
            {
                <tr>
                    <td>@item.ItemId</td>
                    <td>@item.ItemName</td>
                    <td>@item.CategoryName</td>
                    <td>@item.Quality</td>
                    <td>@item.SellIn</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Item> items;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            items = await Http.GetFromJsonAsync<List<Item>>("Inventory/GetAllItemsForTrash");
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }

    protected async void DeleteItemsForTrash()
    {
        items.Clear();
        var dayAdv = await Http.GetAsync("Inventory/DeleteAllItemsForTrash");
        if (dayAdv.IsSuccessStatusCode)
        {
            StateHasChanged();
        }
    }
}
