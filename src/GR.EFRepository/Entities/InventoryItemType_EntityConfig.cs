// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace GR.Repositories.EF.Entities
{

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    internal partial class InventoryItemType_EntityConfig : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InventoryItemType>
    {
        public InventoryItemType_EntityConfig()
            : this("dbo")
        {
        }

        public InventoryItemType_EntityConfig(string schema)
        {
            ToTable("InventoryItemType", schema);
            HasKey(x => x.InventoryItemTypeId);

            Property(x => x.InventoryItemTypeId).HasColumnName(@"InventoryItemTypeId").HasColumnType("smallint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.QualityDeltaStrategyId).HasColumnName(@"QualityDeltaStrategyId").HasColumnType("tinyint").IsRequired();
            Property(x => x.BaseDelta).HasColumnName(@"BaseDelta").HasColumnType("float").IsRequired();
            Property(x => x.MinQuality).HasColumnName(@"MinQuality").HasColumnType("float").IsRequired();
            Property(x => x.MaxQuality).HasColumnName(@"MaxQuality").HasColumnType("float").IsRequired();
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsOptional();

            HasRequired(a => a.QualityDeltaStrategy).WithMany(b => b.InventoryItemTypes).HasForeignKey(c => c.QualityDeltaStrategyId).WillCascadeOnDelete(false);
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
